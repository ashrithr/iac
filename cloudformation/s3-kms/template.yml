AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  Create a S3 Bucket with associated KMS key and a Bucket Policy restricting
  access to a specific IAM role.

Parameters:
  AdminRoleId:
    Description: Role ID of the admin to restrict bucket access to.
    Type: String
    Default: AROASN4Q5N3VS2O7NPKCR

Resources:
  S3KmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "Master Key for this LZ - ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Id: !Sub "master-lz-key-${AWS::StackName}"
        Version: "2012-10-17"
        Statement:
          - Sid: Allow administration of the key by the Account root user
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource: "*"
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/GSuiteAdministrators"
            Action:
              - "kms:*"
            Resource: "*"
          - Sid: Allow SNS use of the key
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey*"
            Resource: "*"

  S3KmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/cw-aws/${AWS::Region}/${AWS::StackName}/kmskey"
      TargetKeyId: !GetAtt S3KmsKey.Arn

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "aws-s3-${AWS::Region}-${AWS::StackName}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
              KMSMasterKeyID: !GetAtt S3KmsKey.Arn

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: S3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:*"
            Effect: Deny
            Principal: "*"
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}"
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Condition:
              StringNotLike:
                aws:userId:
                  - !Sub "${AdminRoleId}:*"
          - NotAction:
              - "s3:PutObject"
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:GetBucketLocation"
              - "s3:AbortMultipartUpload"
              - "s3::List*"
            Effect: Deny
            Principal: "*"
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}"
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
            Condition:
              StringNotLike:
                aws:userId:
                  - !Sub "${BucketIamRole.RoleId}:*"

  BucketIamRole:
    Type: AWS::IAM::Role
    Description: Creates an IAM role to access bucket from Lambda.
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource:
                  - !Sub "arn:aws:s3:::aws-s3-${AWS::Region}-${AWS::StackName}/*"
        - PolicyName: KmsAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kms:*"
                Resource:
                  - !GetAtt BucketIamRole.Arn

Outputs:
  BucketIamRoleId:
    Value: !GetAtt BucketIamRole.RoleId
  BucketIamRoleArn:
    Value: !GetAtt BucketIamRole.Arn
